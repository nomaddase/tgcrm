"""
Handler –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏.
"""

from aiogram import Router, types
from aiogram.filters import Command
from tgcrm.services.ai_assistant import AIService

router = Router()


@router.message(Command("newclient"))
async def create_client(message: types.Message, ai: AIService | None = None):
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ —Å AI-–ø–æ–¥—Å–∫–∞–∑–∫–æ–π."""
    await message.answer("üìû –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞:")

    if ai:
        tip = await ai.get_advice(
            "–ü–æ–¥—Å–∫–∞–∂–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É, —á—Ç–æ —Å—Ç–æ–∏—Ç —É—Ç–æ—á–Ω–∏—Ç—å –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–∞–∑–≥–æ–≤–æ—Ä–µ —Å –Ω–æ–≤—ã–º –∫–ª–∏–µ–Ω—Ç–æ–º."
        )
        await message.answer(f"üí° –°–æ–≤–µ—Ç: {tip}")

    # –õ–æ–≥–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    await message.answer("‚úÖ –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω. –í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.")
    try:
        await message.delete()
    except Exception:
        pass
