"""
–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π ChatGPT.
"""

from aiogram import Router
from aiogram.filters import CommandStart
from aiogram.types import Message

router = Router()


@router.message(CommandStart())
async def handle_start(message: Message, ai=None) -> None:
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞ —Å AI-–ø–æ–¥—Å–∫–∞–∑–∫–æ–π."""
    base_text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø CRM-–±–æ—Ç –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤.\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞ –∏–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É."
    )

    if ai:
        try:
            advice = await ai.get_advice(
                "–°–æ–∑–¥–∞–π –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ CRM, –∫–æ—Ç–æ—Ä—ã–π —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º."
            )
            await message.answer(f"{base_text}\n\nüí° {advice}")
        except Exception:
            await message.answer(base_text)
    else:
        await message.answer(base_text)
