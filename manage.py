#!/usr/bin/env python3
import asyncio
import sys
import time
from dotenv import load_dotenv
from tgcrm.db.session import init_models

load_dotenv()

async def init_db():
    print("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    retries = 5
    for attempt in range(1, retries + 1):
        try:
            await init_models()
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.")
            return
        except Exception as e:
            print(f"‚ö†Ô∏è  –ü–æ–ø—ã—Ç–∫–∞ {attempt}/{retries} –Ω–µ —É–¥–∞–ª–∞—Å—å: {e}")
            if attempt < retries:
                time.sleep(3)
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ .env –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.")
                sys.exit(1)

def main():
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python manage.py init-db")
        sys.exit(1)

    command = sys.argv[1]
    if command == "init-db":
        asyncio.run(init_db())
    else:
        print(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
        sys.exit(1)

if __name__ == "__main__":
    main()
