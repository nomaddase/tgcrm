# ==========================
# tgcrm — финальная версия docker-compose.yml
# ==========================
services:
  postgres:
    image: postgres:15
    container_name: tgcrm-postgres-1
    environment:
      POSTGRES_USER: tgcrm
      POSTGRES_PASSWORD: tgcrm
      POSTGRES_DB: tgcrm
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tgcrm"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - tgcrm_pg_data:/var/lib/postgresql/data
    restart: always

  redis:
    image: redis:7
    container_name: tgcrm-redis-1
    command: redis-server --save 20 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always

  bot:
    build: .
    container_name: tgcrm-bot-1
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always
    command: python -m tgcrm.bot.main

  worker:
    build: .
    container_name: tgcrm-worker-1
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always
    command: celery -A tgcrm.tasks.celery_app.celery_app worker --loglevel=INFO

  beat:
    build: .
    container_name: tgcrm-beat-1
    env_file: .env
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: always
    command: celery -A tgcrm.tasks.celery_app.celery_app beat --loglevel=INFO

volumes:
  tgcrm_pg_data:
